% Utility function for covering state indices to coordinates.
function [lane, spd, ...
    lane_1, dist_1, spd_1,...
    lane_2, dist_2, spd_2] = toyotastatetocoord(s, mdp_params)

lane = ceil(s/(mdp_params.speed *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed));
s = s - (lane - 1) * mdp_params.speed * ...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed;

spd = ceil(s/(mdp_params.lanes * mdp_params.distance * mdp_params.speed *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed));
s = s - (spd - 1) *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed;

lane_1 = ceil(s/(mdp_params.distance * mdp_params.speed *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed));
s = s - (lane_1 - 1) *...
    mdp_params.distance * mdp_params.speed *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed;
    
dist_1 = ceil(s/(mdp_params.speed *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed));
s = s - (dist_1 - 1) *...
    mdp_params.speed *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed;
    
spd_1 = ceil(s/(mdp_params.lanes * mdp_params.distance * mdp_params.speed));
s = s - (spd_1 - 1) *...
    mdp_params.lanes * mdp_params.distance * mdp_params.speed;

lane_2 = ceil(s/(mdp_params.distance * mdp_params.speed));
s = s - (lane_2 - 1) *...
    mdp_params.distance * mdp_params.speed;

dist_2 = ceil(s/(mdp_params.speed));
s = s - (dist_2 - 1) *...
    mdp_params.speed;
    
spd_2 = s;

